<?php 
/*1. Реализовать основные 4 арифметические операции в виде функции с тремя параметрами – два параметра это числа, третий – операция. Обязательно использовать оператор return.*/
function calculate($num1, $num2, $operation) {
  switch ($operation) {
      case 'add':
          return $num1 + $num2;
      case 'subtract':
          return $num1 - $num2;
      case 'multiply':
          return $num1 * $num2;
      case 'divide':
          return $num2 != 0 ? $num1 / $num2 : "Деление на ноль";
      default:
          return "Ошибка ввода";
  }
}
echo calculate(10, 5, 'add'); 

/*2. Реализовать функцию с тремя параметрами: function mathOperation($arg1, $arg2, $operation), где $arg1, $arg2 – значения аргументов, $operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 3) и вернуть полученное значение (использовать switch).*/
// function mathOperation($arg1, $arg2, $operation) {
//   switch ($operation) {
//     case 'add':
//         return $arg1 + $arg2;
//     case 'subtract':
//         return $arg1 - $arg2;
//     case 'multiply':
//         return $arg1 * $arg2;
//     case 'divide':
//         return $arg2 != 0 ? $arg1 / $arg2 : "Деление на ноль";
//     default:
//         return "Ошибка ввода";
//   }
// }

// echo mathOperation(10, 5, 'add'); 
// echo mathOperation(10, 5, 'divide'); 

/*3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким: Московская область: Москва, Зеленоград, Клин Ленинградская область: Санкт-Петербург, Всеволожск, Павловск, Кронштадт Рязанская область … (названия городов можно найти на maps.yandex.ru).*/
// $regions = [
//   'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
//   'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
//   'Рязанская область' => ['Рязань', 'Касимов', 'Сасово'],
// ];

// foreach ($regions as $region => $cities) {
//   echo $region . ": " . implode(', ', $cities) . PHP_EOL;
// }


/*4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’). Написать функцию транслитерации строк.*/
// $alphabet = [
//   'а' => 'a',   'б' => 'b',   'в' => 'v',
//   'г' => 'g',   'д' => 'd',   'е' => 'e',
//   'ё' => 'e',   'ж' => 'zh',  'з' => 'z',
//   'и' => 'i',   'й' => 'y',   'к' => 'k',
//   'л' => 'l',   'м' => 'm',   'н' => 'n',
//   'о' => 'o',   'п' => 'p',   'р' => 'r',
//   'с' => 's',   'т' => 't',   'у' => 'u',
//   'ф' => 'f',   'х' => 'h',   'ц' => 'c',
//   'ч' => 'ch',  'ш' => 'sh',  'щ' => 'sch',
//   'ь' => '\'',  'ы' => 'y',   'ъ' => '\'',
//   'э' => 'e',   'ю' => 'yu',  'я' => 'ya'
// ];

// function transliterate($string) {
//   global $alphabet;
//   $transliterated = '';
//   $string = mb_strtolower($string); 
//   for ($i = 0; $i < mb_strlen($string); $i++) {
//       $char = mb_substr($string, $i, 1);
//       $transliterated .= $alphabet[$char] ?? $char;
//   }
//   return $transliterated;
// }

// echo transliterate("Привет, мир!"); 